# Jidoteki Admin tasks

- name: Create '/opt/jidoteki/admin' directory structure
  file: >
    state=directory
    path={{ item }}
    owner=root
    group=root
    mode=0755
  with_items:
    - "{{ admin_path }}/bin"
    - "{{ admin_path }}/etc"
    - "{{ admin_path }}/tmp"
    - "{{ admin_path }}/log"
  tags:
    - admin

- name: Copy the secure keyfile used to decrypt software update packages
  copy: >
    src="{{ keypair_path }}/updates.key"
    dest="{{ admin_path }}/etc/updates.key"
    owner=root
    group=admin
    mode=0640
  tags:
    - admin

- name: Create the initial version.txt file
  lineinfile: >
    state=present
    create=yes
    line="{{ release_version }}"
    dest="{{ admin_path }}/etc/version.txt"
  tags:
    - admin
    - version

- name: Set the proper file permissions on the version.txt file
  file: >
    state=file
    path="{{ admin_path }}/etc/version.txt"
    owner=root
    group=root
    mode=0644
  tags:
    - admin

- name: Create admin directories only writeable by root
  file: >
    state=directory
    path={{ item }}
    owner=root
    group=admin
    mode=0750
    recurse=no
  with_items:
    - "{{ admin_path }}/home"
    - "{{ admin_path }}/home/.ssh"
    - "{{ admin_path }}/home/sftp"
  tags:
    - admin

- name: Add 'admin/sftpadmin' user's public SSH key
  authorized_key: >
    user=admin
    key="{{ item }}"
    key_options='no-pty,command="{{ admin_path }}/bin/wrapper.sh"'
    manage_dir=no
  with_file:
    - "{{ keypair_path }}/admin_ssh_key.pub"
  tags:
    - admin

- name: Ensure 'admin/sftpadmin' user can't modify the authorized_keys file
  file: >
    state=file
    path="{{ admin_path }}/home/.ssh/authorized_keys"
    owner=root
    group=admin
    mode=0640
  tags:
    - admin

- name: Create admin sftp uploads directory
  file: >
    state=directory
    path={{ item }}
    owner=sftpadmin
    group=admin
    mode=0770
    recurse=no
  with_items:
    - "{{ admin_path }}/home/sftp/uploads"
  tags:
    - admin

- name: Add SSH admin management scripts
  copy: >
    src={{ item }}
    dest="{{ admin_path }}/bin/{{ item }}"
    owner=root
    group=root
    mode=0755
  with_items:
    - update_vm.sh
    - update_license.sh
    - update_settings.sh
    - update_token.sh
    - update_logs.sh
  tags:
    - admin
    - updated

- name: Add SSH admin wrapper script
  copy: >
    src=wrapper.sh
    dest="{{ admin_path }}/bin/wrapper.sh"
    owner=root
    group=admin
    mode=0750
  tags:
    - admin
    - updated

- name: Ensure the updates key has the proper permissions
  file: >
    state=file
    path="{{ admin_path }}/etc/updates.key"
    owner=root
    group=admin
    mode=0640
  tags:
    - admin
    - updated

- include: repos_debian.yml
- include: repos_centos.yml
